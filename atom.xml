<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>푹신푹신 후와후와</title>
  
  <subtitle>동기(motivation) 중심의 문제해결 이야기</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://3-24.github.io/"/>
  <updated>2019-03-04T10:35:10.852Z</updated>
  <id>https://3-24.github.io/</id>
  
  <author>
    <name>Youngseok Choe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>계획을 짜봤습니다.</title>
    <link href="https://3-24.github.io/2019/03/04/%EA%B3%84%ED%9A%8D%EC%9D%84-%EC%A7%9C%EB%B4%A4%EC%8A%B5%EB%8B%88%EB%8B%A4/"/>
    <id>https://3-24.github.io/2019/03/04/계획을-짜봤습니다/</id>
    <published>2019-03-04T09:33:33.000Z</published>
    <updated>2019-03-04T10:35:10.852Z</updated>
    
    <content type="html"><![CDATA[<p>계획 없는 것보단 있는게 낫잖아요? 그런 마인드로 잘 안지켜져도 1주간 떠오른 생각들을 적어볼까 해요!</p><h2 id="수강신청"><a href="#수강신청" class="headerlink" title="수강신청"></a>수강신청</h2><p>제 관심이 아닌 필수 과목들을 빨리 끝낼수록 좋다고 생각해서 처음에는 별로 드랍을 안하려고 했는데, 일반화학과 실험과목을 취소했어요. 그 이유는 약간 복잡한데 대충 ‘출석점수 하나 까였고, 수업도 별로라서’로 일축 가능합니다. 내년에 학점인정시험 공부해서 정말로 패스하고 싶은 과목이에요 후..</p><p><strong>2020년 2월 마지막주까지 일반화학1 학점인정시험 준비를 마친다.</strong></p><p>그리고 AP로 미적분학과 일반물리학을 드랍했습니다. 그래서 슬롯 세 개가 남는데 인문 하나랑 <strong>확률및통계, 현대대수1, 해석학1</strong>을 넣었죠.</p><h4 id="확률및통계"><a href="#확률및통계" class="headerlink" title="확률및통계"></a>확률및통계</h4><p>기초선택과목이라서 넣었습니다. 다른거는 들을게 없더라고요. 프로그래밍 경험이 있고 수업도 무난해서 들을만합니다.</p><h4 id="해석학1"><a href="#해석학1" class="headerlink" title="해석학1"></a>해석학1</h4><p>위상수학을 듣고 싶고, 책 뒷부분에 나오는 르베그 측도에도 관심이 있습니다. 악명 높은 PMA를 사용하기에 각오는 되어있습니다. </p><h4 id="현대대수1"><a href="#현대대수1" class="headerlink" title="현대대수1"></a>현대대수1</h4><p>군론을 깊게 공부하고 끝에 환을 약간 곁들이는 걸로 알고 있습니다. 군은 전산 이론에서도 잘 나와서 친해질수록 좋아요!</p><h1 id="전공"><a href="#전공" class="headerlink" title="전공"></a>전공</h1><p>일단 새내기과정학부라서 현재 전공은 없습니다. 시간표 보고 다들 수학과라고 생각하더라고요,</p><ul><li><p>수학을 좋아한다.</p><p>정말 어떤 분야도 수학처럼 체계적일 수는 없습니다. 논리와 집합을 공부하면서 공리가 어떻게 초중고등학교 떄 배운 수학 아래에 깔려있는지 알게 되었는데, 정.말. 감동적이었습니다. 언제 과학철학 수업을 들었었는데, 정말 과학은 수학과 비교하면 엉망진창이더라고요(소신 발언! 비교 대상이 대상인지라).</p></li></ul><p>수학을 좋아하고, 지금도 고민하고는 있지만, 주전공은 전산학으로 정해놓고 있습니다.</p><p>그 이유는 여러가지가 있어요.</p><ul><li><p>수학 전공이 무섭다.</p><p>좋아하는 것을 하라고 하지만, 학교에서 같이 공부하는 친구들을 보면 제가 너무 노력하는 것 같아 안타까운 느낌이 들 때가 많아요. 노력으로 모든 것을 해결할 수 있다는 말만큼 무책임한 말이 없다고 생각합니다. 고등학교 때 연구 교육을 수학만 선택해서 받았었는데, 공부할 것은 끝이 없고, 결과는 내야 하고, 돌아보니 아주 힘들었습니다. 수학 연구는 추상화의 극단으로 들어가서 새로운 세상을 만드는 것과 같습니다.</p></li><li><p>컴퓨터를 좋아한다!</p><p>예전부터 컴퓨터 안에서 숨겨진 기능을 찾아내는 것을 좋아했습니다. 마우스 포인터를 바꾸면서 신기해했고, 언젠가는 cmd 창에서 shutdown 명령어를 달달 외우고 다녔었습니다. ping 명령어를 공격이라고 생각하고 학교 컴퓨터실에서 친구 컴퓨터 아이피로 핑을 막 보내기도 했었죠. 블로그도 무려 초등학교 때부터 운영했습니다. 혼자 찾아보거나 학원에서 배워온 이론들을 아주 열심히 포스팅했던 것 같아요. 지금은 보면 글이 대게 허접해보이지만 그 글을 썼을 때를 보면 저도 놀라곤 합니다.</p><p>그러다보니 코딩을 접하게 되었고, Fiddler로 웹 패킷을 뜯어보게 되었고, 고등학교에서 정보과학을 접해보고, 클라우드 서버를 굴려서 챗봇을 만들어보고 해서 그게 지금에 이르게 되었습니다. 제 삶에서 컴퓨터를 떼어내는 것은 불가능하겠네요.</p></li></ul><p>사실 모르겠어요. 전산 이론을 연구하는거랑 저런 잡다한 컴퓨터 지식을 배우는 것은 별개라서. 제가 공부했었던 알고리즘, 이산구조 같은 전산 이론은 수학이기는 한데 시간복잡도 같은 이론적 실용성에 더 초점을 두고 있습니다. 저는 그래도 수학에 더 가깝다고 보고 있어요.</p><h3 id="대학원"><a href="#대학원" class="headerlink" title="대학원?"></a>대학원?</h3><p>사실 너무 막연해요. 군 문제를 해결하기 위해 자대 대학원을 갈 수도 있고, 생각이 바뀌어서 유학을 갈 수도 있고, 그냥 영어 공부 열심히 하고 학점 관리해서 기회를 열어놓는게 최선인 것 같습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;계획 없는 것보단 있는게 낫잖아요? 그런 마인드로 잘 안지켜져도 1주간 떠오른 생각들을 적어볼까 해요!&lt;/p&gt;
&lt;h2 id=&quot;수강신청&quot;&gt;&lt;a href=&quot;#수강신청&quot; class=&quot;headerlink&quot; title=&quot;수강신청&quot;&gt;&lt;/a&gt;수강신청&lt;/h2&gt;
      
    
    </summary>
    
      <category term="일상" scheme="https://3-24.github.io/categories/%EC%9D%BC%EC%83%81/"/>
    
    
      <category term="계획" scheme="https://3-24.github.io/tags/%EA%B3%84%ED%9A%8D/"/>
    
      <category term="KAIST 학부과정" scheme="https://3-24.github.io/tags/KAIST-%ED%95%99%EB%B6%80%EA%B3%BC%EC%A0%95/"/>
    
  </entry>
  
  <entry>
    <title>현대대수 노트</title>
    <link href="https://3-24.github.io/2019/02/28/Abstract-Algebra-TeX/"/>
    <id>https://3-24.github.io/2019/02/28/Abstract-Algebra-TeX/</id>
    <published>2019-02-28T07:27:42.000Z</published>
    <updated>2019-02-28T07:33:36.665Z</updated>
    
    <content type="html"><![CDATA[<p>현대대수 공부도 할 겸 강의를 듣고 제 방식으로 현대대수에서 사용되는 개념들을 재구성하는 것을 목표로 연재중인 LaTeX 기반 노트입니다. 끝까지 완성하는 것을 목표로 해보겠습니다! 자세한 것은 해당 깃허브 프로젝트의 README.md를 참고해주세요.</p><p><a href="https://github.com/3-24/abstract-algebra" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/3-24/abstract-algebra</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;현대대수 공부도 할 겸 강의를 듣고 제 방식으로 현대대수에서 사용되는 개념들을 재구성하는 것을 목표로 연재중인 LaTeX 기반 노트입니다. 끝까지 완성하는 것을 목표로 해보겠습니다! 자세한 것은 해당 깃허브 프로젝트의 README.md를 참고해주
      
    
    </summary>
    
      <category term="일상" scheme="https://3-24.github.io/categories/%EC%9D%BC%EC%83%81/"/>
    
    
      <category term="LaTeX" scheme="https://3-24.github.io/tags/LaTeX/"/>
    
      <category term="Github" scheme="https://3-24.github.io/tags/Github/"/>
    
      <category term="Abstract Algebra" scheme="https://3-24.github.io/tags/Abstract-Algebra/"/>
    
  </entry>
  
  <entry>
    <title>Python을 이용한 백준 자동 소스 제출 봇 만들기</title>
    <link href="https://3-24.github.io/2019/01/28/BOJ-submit-bot/"/>
    <id>https://3-24.github.io/2019/01/28/BOJ-submit-bot/</id>
    <published>2019-01-27T22:43:26.000Z</published>
    <updated>2019-01-28T08:49:28.393Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><p>제작 언어는 Python 3를 기본으로 합니다.</p><p>Python을 이용해 웹에 로그인이나 소스를 제출하기 위해서 requests 패키지가, 페이지 내용을 효율적으로 읽기 위한 BeautifulSoup4 패키지가 필요합니다. 해당 패키지가 없다면 (Windows 기준) cmd에서 다음을 입력하여 설치할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br><span class="line">pip install bs4</span><br></pre></td></tr></table></figure><p>개발에 이해를 돕는 용도로 웹 디버깅 소프트웨어인 <a href="https://www.google.com/search?q=Fiddler&amp;oq=Fiddler&amp;aqs=chrome..69i57j69i60l3.2554j0j7&amp;sourceid=chrome&amp;ie=UTF-8" rel="external nofollow noopener noreferrer" target="_blank">Fiddler</a>를 사용하면 더 좋습니다. 필수사항은 아닙니다.</p><h2 id="로그인"><a href="#로그인" class="headerlink" title="로그인"></a>로그인</h2><h3 id="로그인하기"><a href="#로그인하기" class="headerlink" title="로그인하기"></a>로그인하기</h3><p>백준의 로그인은 가장 기본적인 형태입니다. Fiddler를 띄우고 백준 로그인을 해보면 다음과 같은 패킷을 확인할 수 있습니다.</p><img src="/2019/01/28/BOJ-submit-bot/fiddler01.png" title="로그인 패킷"><p><code>login_user_id</code>에 아이디를, <code>login_password</code>에 비밀번호를 입력하고 <a href="https://acmicpc.net/signin" rel="external nofollow noopener noreferrer" target="_blank">https://acmicpc.net/signin</a>으로 전송하는군요. 이 과정을 Python으로 작성해보면 다음과 같습니다:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">LOGIN_INFO = &#123;<span class="string">"login_user_id"</span>:<span class="string">"(아이디)"</span>, <span class="string">"login_password"</span>:<span class="string">"(비밀번호)"</span>&#125;</span><br><span class="line">boj_url = <span class="string">"https://www.acmicpc.net/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.post(boj_url+<span class="string">'signin'</span>,data=LOGIN_INFO)</span><br></pre></td></tr></table></figure><p>requests 세션을 하나 만들어놓고 로그인할 때 정보를 보내는 주소에 로그인 정보를 보내면 됩니다.</p><h3 id="로그인-확인하기-optional"><a href="#로그인-확인하기-optional" class="headerlink" title="로그인 확인하기(optional)"></a>로그인 확인하기(optional)</h3><p>로그인이 제대로 되었는지를 확인하려면 로그인하기 전과 후에 생기는 차이를 검사해야겠죠? 백준의 경우 쿠키에 로그인 정보가 기록이 되지 않기 때문에 사이트에서 직접 찾아야 합니다.</p><img src="/2019/01/28/BOJ-submit-bot/chrome01.png" title="백준 로그인"><p>개발자도구로 확인해보니 a태그의 username class에 제 아이디가 입력되어있네요. 이걸 활용해봅시다. 크롬 콘솔에서 해당 객체 이름을 검색해보면 로그인한 후는</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> d = $(<span class="string">'a.username'</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; d</span><br><span class="line">&lt;a href=<span class="string">"/user/uncertainty"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"username"</span>&gt;uncertainty&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure><p>인데 로그인하기 전으로 돌아가서 확인하면</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; d</span><br><span class="line"><span class="literal">undefined</span></span><br></pre></td></tr></table></figure><p>이므로 username은 좋은 로그인 식별자가 된다는 것을 알 수 있습니다! <code>a.username</code>을 Python으로 읽어서 None인지 아닌지만 확인하면 됩니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line">LOGIN_INFO = &#123;<span class="string">"login_user_id"</span>:<span class="string">"(아이디)"</span>, <span class="string">"login_password"</span>:<span class="string">"(비밀번호)"</span>&#125;</span><br><span class="line">boj_url = <span class="string">"https://www.acmicpc.net/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.post(boj_url+<span class="string">'signin'</span>,data=LOGIN_INFO)</span><br><span class="line">    soup = bs(sess.get(boj_url).text, <span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">if</span> soup.find(<span class="string">'a'</span>, &#123;<span class="string">'class'</span>: <span class="string">'username'</span>&#125;) <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        print(<span class="string">"Invalid login info"</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>백준 메인주소인 acmicpc.net을 읽은 후 BeautifulSoup의 html 파서로 이렇게 확인할 수 있습니다. 로그인은 여기까지 하면 되겠군요.</p><h2 id="소스-제출"><a href="#소스-제출" class="headerlink" title="소스 제출"></a>소스 제출</h2><h3 id="테스트-소스-준비하기"><a href="#테스트-소스-준비하기" class="headerlink" title="테스트 소스 준비하기"></a>테스트 소스 준비하기</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a,b;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;a,&amp;b);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,a-b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>↑ 예전에 짜놓은 1001번 C++ (C) 소스</p><p>먼저 자동으로 제출할 소스를 준비해놓아야 합니다. 테스트용으로 저는 <a href="https://www.acmicpc.net/problem/1001" rel="external nofollow noopener noreferrer" target="_blank">1001번</a> 소스를 Python 소스와 같은 경로에 저장해놓았습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BOJ_bot</span><br><span class="line">└─1001.cpp</span><br><span class="line">└─main.py</span><br></pre></td></tr></table></figure><p>그리고 Python main.py에서 문제 번호를 저장하고 소스도 미리 읽어놓는 코드를 로그인 전에 넣어놓습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line">LOGIN_INFO = &#123;<span class="string">"login_user_id"</span>:<span class="string">"(아이디)"</span>, <span class="string">"login_password"</span>:<span class="string">"(비밀번호)"</span>&#125;</span><br><span class="line">boj_url = <span class="string">"https://www.acmicpc.net/"</span></span><br><span class="line"></span><br><span class="line">problem_id = <span class="number">1001</span></span><br><span class="line">language = <span class="string">"C++14"</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"1001.cpp"</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    code = f.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.post(boj_url+<span class="string">'signin'</span>,data=LOGIN_INFO)</span><br><span class="line">    soup = bs(sess.get(boj_url).text, <span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">if</span> soup.find(<span class="string">'a'</span>, &#123;<span class="string">'class'</span>: <span class="string">'username'</span>&#125;) <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        print(<span class="string">"Invalid login info"</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="테스트-소스-제출해보기"><a href="#테스트-소스-제출해보기" class="headerlink" title="테스트 소스 제출해보기"></a>테스트 소스 제출해보기</h3><p>소스를 제출할 때 패킷을 확인해볼까요?</p><img src="/2019/01/28/BOJ-submit-bot/chrome03.png" title="제출 화면"><img src="/2019/01/28/BOJ-submit-bot/fiddler02.png" title="소스 제출 패킷"><p>눈에 띄는 것은 <code>problem_id</code>는 문제번호, <code>language</code>는 제가 선택한 언어인 C++14에 해당하는 번호, <code>code_open</code>은 코드 공개여부(저는 공개가 기본 설정입니다), <code>source</code>는 소스 전문인건 알겠는데, <code>csrf_key</code>는 또 뭐람.. 킁 보안토큰같은데..</p><p><a href="https://stackoverflow.com/questions/5207160/what-is-a-csrf-token-what-is-its-importance-and-how-does-it-work" rel="external nofollow noopener noreferrer" target="_blank">https://stackoverflow.com/questions/5207160/what-is-a-csrf-token-what-is-its-importance-and-how-does-it-work</a></p><p>여기 좋은 설명이 있는 것 같아서 대체합니다. 소스 제출의 부정사용 방지로 보이네요. 그러니까 이 글의 링크 중 하나에 백준에 틀린 소스를 제출하는 것을 심어놓으면 여러분의 백준 정답률을 떨구는 효과를 기대할 수 있습니다(!!). 그런거 막아주는 거에요.</p><img src="/2019/01/28/BOJ-submit-bot/chrome02.png" title="csrf_key 값"><p><code>csrf_key</code>는 제출 사이트의 html을 확인해보니까 hidden으로 감춰져있던 것이 모습을 드러내줍니다. 이걸 받아서 쓰면 되겠군요! input 태그 안에서 name으로 찾아주면 됩니다. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">key = soup.find(<span class="string">'input'</span>, &#123;<span class="string">'name'</span>: <span class="string">'csrf_key'</span>&#125;)[<span class="string">'value'</span>]</span><br><span class="line"><span class="keyword">except</span> TypeError:</span><br><span class="line">print(<span class="string">"Wrong problem number"</span>)</span><br><span class="line">exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><code>language</code>의 번호도 언어 선택창을 html로 읽어보면 확인할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"language"</span> <span class="attr">name</span>=<span class="string">"language"</span> <span class="attr">data-placeholder</span>=<span class="string">"언어를 선택해 주세요."</span> <span class="attr">class</span>=<span class="string">"language-select col-md-2 chosen-select"</span> <span class="attr">data-no_results_text</span>=<span class="string">"없는 언어 입니다."</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"88"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>C++14<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-java"</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"28"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-python"</span> <span class="attr">selected</span>=<span class="string">""</span>&gt;</span>Python 3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"75"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-csrc"</span>&gt;</span>C11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"73"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-python"</span>&gt;</span>PyPy3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-csrc"</span>&gt;</span>C<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"49"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>C++11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"84"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>C++17<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"91"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-java"</span>&gt;</span>Java (OpenJDK)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"93"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-java"</span>&gt;</span>Java 11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"6"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-python"</span>&gt;</span>Python 2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"32"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-python"</span>&gt;</span>PyPy2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"68"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-ruby"</span>&gt;</span>Ruby 2.5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"69"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-kotlin"</span>&gt;</span>Kotlin (JVM)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"92"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-kotlin"</span>&gt;</span>Kotlin (Native)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"74"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-swift"</span>&gt;</span>Swift<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"58"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Text<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"62"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-csharp"</span>&gt;</span>C# 6.0<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"17"</span> <span class="attr">data-mime</span>=<span class="string">"text/javascript"</span>&gt;</span>node.js<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"12"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-go"</span>&gt;</span>Go<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"29"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-d"</span>&gt;</span>D<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"37"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-fsharp"</span>&gt;</span>F#<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"7"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-php"</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"44"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Rust<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-pascal"</span>&gt;</span>Pascal<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"16"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-lua"</span>&gt;</span>Lua<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"8"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-perl"</span>&gt;</span>Perl<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"72"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-rsrc"</span>&gt;</span>R<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"10"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-objectivec"</span>&gt;</span>Objective-C<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"64"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-objectivec"</span>&gt;</span>Objective-C++<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"59"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-csrc"</span>&gt;</span>C (Clang)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"60"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>C++ (Clang)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"66"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>C++11 (Clang)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"67"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>C++14 (Clang)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"77"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-csrc"</span>&gt;</span>C11 (Clang)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"85"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>C++17 (Clang)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"79"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Golfscript<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"27"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Assembly (32bit)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"87"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Assembly (64bit)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"63"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-vb"</span>&gt;</span>VB.NET 4.0<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"5"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-sh"</span>&gt;</span>Bash<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"13"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-fortran"</span>&gt;</span>Fortran<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"14"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-scheme"</span>&gt;</span>Scheme<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"19"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Ada<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"21"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>awk<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"22"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-ocaml"</span>&gt;</span>OCaml<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"23"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-brainfuck"</span>&gt;</span>Brainfuck<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"24"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Whitespace<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"26"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-tcl"</span>&gt;</span>Tcl<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"34"</span> <span class="attr">data-mime</span>=<span class="string">"text/javascript"</span>&gt;</span>Rhino<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"35"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-cobol"</span>&gt;</span>Cobol<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"41"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-c++src"</span>&gt;</span>Pike<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"43"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>sed<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"46"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Boo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"47"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Intercal<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"48"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>bc<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"53"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Nemerle<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"54"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Cobra<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"70"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Algol 68<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"71"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>Befunge<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"81"</span> <span class="attr">data-mime</span>=<span class="string">"text/x-haxe"</span>&gt;</span>Haxe<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"82"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>LOLCODE<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"83"</span> <span class="attr">data-mime</span>=<span class="string">"text/plain"</span>&gt;</span>아희<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>여기서 필요한 것으로 dictionary를 만들어 관리하면 되겠습니다. 저는 C++14와 Python 3만 사용하니 그 두 개만 만들었습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LANG = &#123;<span class="string">"C++14"</span>:<span class="number">88</span>, <span class="string">"Python 3"</span>:<span class="number">28</span>&#125;</span><br></pre></td></tr></table></figure><p>지금까지 모은 제출 정보들을 dictionary로 모아서 제출하면 됩니다. <code>code_open</code>의 onlyaccepted는 ‘맞았을 때만 공개’ 옵션입니다. 위 패킷에서 읽은 주소 형태가 /submit/1001 이었죠? 그 주소 그대로 세션의 post에 사용하면 됩니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> language <span class="keyword">not</span> <span class="keyword">in</span> LANG:</span><br><span class="line">    print(<span class="string">"Invalid language"</span>)</span><br><span class="line">    exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'problem_id'</span>: problem_id,</span><br><span class="line">    <span class="string">'source'</span>: code,</span><br><span class="line">    <span class="string">'language'</span>: LANG[language],</span><br><span class="line">    <span class="string">'code_open'</span>: <span class="string">'onlyaccepted'</span>,</span><br><span class="line">    <span class="string">'csrf_key'</span>: key</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sess.post(boj_url + <span class="string">'/submit/'</span> + str(problem_id), data=data)</span><br></pre></td></tr></table></figure><p>지금까지 작성한 Python 소스를 정리하면 다음과 같습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line">LOGIN_INFO = &#123;<span class="string">"login_user_id"</span>:<span class="string">"(아이디)"</span>, <span class="string">"login_password"</span>:<span class="string">"(비밀번호)"</span>&#125;</span><br><span class="line">boj_url = <span class="string">"https://www.acmicpc.net/"</span></span><br><span class="line">LANG = &#123;<span class="string">"C++14"</span>:<span class="number">88</span>, <span class="string">"Python 3"</span>:<span class="number">28</span>&#125;</span><br><span class="line"></span><br><span class="line">problem_id = <span class="number">1001</span></span><br><span class="line">language = <span class="string">"C++14"</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"1001.cpp"</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    code = f.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.post(boj_url+<span class="string">'signin'</span>,data=LOGIN_INFO)</span><br><span class="line"></span><br><span class="line">    soup = bs(sess.get(boj_url).text, <span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">if</span> soup.find(<span class="string">'a'</span>, &#123;<span class="string">'class'</span>: <span class="string">'username'</span>&#125;) <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        print(<span class="string">"invalid login info"</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    soup = bs(sess.get(boj_url + <span class="string">'submit/'</span> + str(problem_id)).text, <span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        key = soup.find(<span class="string">'input'</span>, &#123;<span class="string">'name'</span>: <span class="string">'csrf_key'</span>&#125;)[<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">except</span> TypeError:</span><br><span class="line">        print(<span class="string">"Wrong problem number"</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> language <span class="keyword">not</span> <span class="keyword">in</span> LANG:</span><br><span class="line">        print(<span class="string">"Invalid language"</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'problem_id'</span>: problem_id,</span><br><span class="line">        <span class="string">'source'</span>: code,</span><br><span class="line">        <span class="string">'language'</span>: LANG[language],</span><br><span class="line">        <span class="string">'code_open'</span>: <span class="string">'onlyaccepted'</span>,</span><br><span class="line">        <span class="string">'csrf_key'</span>: key</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sess.post(boj_url + <span class="string">'/submit/'</span> + str(problem_id), data=data)</span><br></pre></td></tr></table></figure><h2 id="결과-확인"><a href="#결과-확인" class="headerlink" title="결과 확인"></a>결과 확인</h2><p>이제 막바지입니다. 제출할 일도 없어서 쉬운 것만 남았네요. 어떻게 ‘채점이 종료되었다’는 것을 확인할 것인지를 생각해보아야 합니다. 관찰이 필요한 부분이죠.</p><p>먼저 제출하고 채점을 기다릴 때를 확인해보았습니다.</p><img src="/2019/01/28/BOJ-submit-bot/chrome04.png" title="채점 대기"><p>저 ‘기다리는 중’이라는 상태 메시지의 html은 다음과 같습니다:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"result-text"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"result-wait"</span>&gt;</span>기다리는 중<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>채점 중일 때는 다음과 같습니다:</p><img src="/2019/01/28/BOJ-submit-bot/chrome06.png" title="채점 중"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"result-text"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"result-judging"</span>&gt;</span>채점 중 (6%, 11초)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>채점이 완료되었을 때는 어떨까요?</p><img src="/2019/01/28/BOJ-submit-bot/chrome05.png" title="채점 완료"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"result-text"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"result-ac"</span>&gt;</span>맞았습니다!!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>class의 이름이 바뀌면서 채점 결과가 들어갑니다. 즉, “result-ac”가 None이면 아직 채점이 중이라는 뜻이에요. 이를 이용해 채점이 완료되었는지를 식별할 수 있습니다. 이를 이용해 while문을 탈출해주면 되겠습니다. 콘솔에 한 줄로 출력하기 위해 <code>\r</code>을 적극적으로 사용했습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    url = boj_url + <span class="string">'/status?from_mine=1&amp;problem_id='</span> + str(problem_id) + <span class="string">'&amp;user_id'</span> + LOGIN_INFO[<span class="string">"login_user_id"</span>]</span><br><span class="line">    soup = bs(sess.get(url).text, <span class="string">'html.parser'</span>)</span><br><span class="line">    status = soup.find(<span class="string">'span'</span>, &#123;<span class="string">'class'</span>: <span class="string">'result-text'</span>&#125;).find(<span class="string">'span'</span>).string.strip()</span><br><span class="line">    result = soup.find(<span class="string">'span'</span>, &#123;<span class="string">'class'</span>: <span class="string">'result-ac'</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> result <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">'\r                      '</span>,end=<span class="string">''</span>)</span><br><span class="line">    print(<span class="string">'\r%s'</span> % status, end=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">print()</span><br></pre></td></tr></table></figure><h2 id="마무리"><a href="#마무리" class="headerlink" title="마무리"></a>마무리</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line">LOGIN_INFO = &#123;<span class="string">"login_user_id"</span>:<span class="string">"(아이디)"</span>, <span class="string">"login_password"</span>:<span class="string">"(비밀번호)"</span>&#125;</span><br><span class="line">boj_url = <span class="string">"https://www.acmicpc.net/"</span></span><br><span class="line">LANG = &#123;<span class="string">"C++14"</span>:<span class="number">88</span>, <span class="string">"Python 3"</span>:<span class="number">28</span>&#125;</span><br><span class="line"></span><br><span class="line">problem_id = <span class="number">1001</span></span><br><span class="line">language = <span class="string">"C++14"</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"1001.cpp"</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    code = f.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.post(boj_url+<span class="string">'signin'</span>,data=LOGIN_INFO)</span><br><span class="line"></span><br><span class="line">    soup = bs(sess.get(boj_url).text, <span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">if</span> soup.find(<span class="string">'a'</span>, &#123;<span class="string">'class'</span>: <span class="string">'username'</span>&#125;) <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        print(<span class="string">"invalid login info"</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    soup = bs(sess.get(boj_url + <span class="string">'submit/'</span> + str(problem_id)).text, <span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        key = soup.find(<span class="string">'input'</span>, &#123;<span class="string">'name'</span>: <span class="string">'csrf_key'</span>&#125;)[<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">except</span> TypeError:</span><br><span class="line">        print(<span class="string">"Wrong problem number"</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> language <span class="keyword">not</span> <span class="keyword">in</span> LANG:</span><br><span class="line">        print(<span class="string">"Invalid language"</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'problem_id'</span>: problem_id,</span><br><span class="line">        <span class="string">'source'</span>: code,</span><br><span class="line">        <span class="string">'language'</span>: LANG[language],</span><br><span class="line">        <span class="string">'code_open'</span>: <span class="string">'onlyaccepted'</span>,</span><br><span class="line">        <span class="string">'csrf_key'</span>: key</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sess.post(boj_url + <span class="string">'/submit/'</span> + str(problem_id), data=data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        url = boj_url + <span class="string">'/status?from_mine=1&amp;problem_id='</span> + str(problem_id) + <span class="string">'&amp;user_id'</span> + LOGIN_INFO[<span class="string">"login_user_id"</span>]</span><br><span class="line">        soup = bs(sess.get(url).text, <span class="string">'html.parser'</span>)</span><br><span class="line">        status = soup.find(<span class="string">'span'</span>, &#123;<span class="string">'class'</span>: <span class="string">'result-text'</span>&#125;).find(<span class="string">'span'</span>).string.strip()</span><br><span class="line">        result = soup.find(<span class="string">'span'</span>, &#123;<span class="string">'class'</span>: <span class="string">'result-ac'</span>&#125;)</span><br><span class="line">        print(<span class="string">'\r                      '</span>,end=<span class="string">''</span>)</span><br><span class="line">        print(<span class="string">'\r%s'</span> % status, end=<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> result <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p>지금까지 작성한 코드 전문입니다. 저는 이를 이용해 github 자동 저장이나, 운에 의지해야 하는 일부 문제들에 접근하려고 합니다. (드디어 <a href="https://www.acmicpc.net/problem/10944" rel="external nofollow noopener noreferrer" target="_blank">랜덤 게임~~</a>을 풀 수 있는 것인가!) 많은 분에게 도움이 되었으면 좋겠네요.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;h2 id=&quot;Requirements&quot;&gt;&lt;a href=&quot;#Requirements&quot; class=&quot;headerlink&quot; title=&quot;Requirements&quot;&gt;&lt;/a&gt;Requirements&lt;/h2&gt;&lt;p&gt;제작 언어는 Python 3를 
      
    
    </summary>
    
      <category term="프로그래밍" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
      <category term="백준" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/%EB%B0%B1%EC%A4%80/"/>
    
    
      <category term="개발" scheme="https://3-24.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="백준" scheme="https://3-24.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
      <category term="봇" scheme="https://3-24.github.io/tags/%EB%B4%87/"/>
    
      <category term="Python" scheme="https://3-24.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>블로그 구현 로그</title>
    <link href="https://3-24.github.io/2019/01/17/blog-setup/"/>
    <id>https://3-24.github.io/2019/01/17/blog-setup/</id>
    <published>2019-01-17T10:20:30.000Z</published>
    <updated>2019-01-27T10:49:45.029Z</updated>
    
    <content type="html"><![CDATA[<h4 id="190115"><a href="#190115" class="headerlink" title="190115"></a>190115</h4><ul><li><p>Hexo 기반의 블로그입니다. 현재 적용하고 있는 테마는 <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" rel="external nofollow noopener noreferrer" target="_blank">Tranquilpeak</a>입니다.</p></li><li><p>Mathjax 기능을 지원하기 위해 <a href="https://hyeshinoh.github.io/2018/10/24/hexo_mathjax_00/" rel="external nofollow noopener noreferrer" target="_blank">https://hyeshinoh.github.io/2018/10/24/hexo_mathjax_00/</a> 를 참고해서 설정했습니다.</p></li><li><p>기본 폰트를 변경하기 위해</p><p><a href="http://blog.lattecom.xyz/2016/05/08/tranquilpeak-theme-web-font/" rel="external nofollow noopener noreferrer" target="_blank">http://blog.lattecom.xyz/2016/05/08/tranquilpeak-theme-web-font/</a></p><p><a href="https://taetaetae.github.io/2017/08/27/hexo-themes-tranquilpeak/" rel="external nofollow noopener noreferrer" target="_blank">https://taetaetae.github.io/2017/08/27/hexo-themes-tranquilpeak/</a></p><p>를 따라갔습니다. (두 글 다 필요합니다)</p></li><li><p>프로필과 사이드바를 개인화customization했습니다.</p></li><li><p>Disqus로 댓글이 가능하게 만들었습니다.</p></li></ul><h4 id="190117"><a href="#190117" class="headerlink" title="190117"></a>190117</h4><ul><li><a href="https://futurecreator.github.io/2016/06/23/search-engine-optimization-hexo-plugins/" rel="external nofollow noopener noreferrer" target="_blank">https://futurecreator.github.io/2016/06/23/search-engine-optimization-hexo-plugins/</a> 를 참고하여 검색 최적화 설정을 했습니다. 사이트맵도 자동으로 만들어주고 좋은 기능이 많네요!</li></ul><h4 id="Plan"><a href="#Plan" class="headerlink" title="Plan"></a>Plan</h4><ul><li>Algolia Search 적용하기: 블로그 내 검색 기능을 활성화합니다.</li><li>MathJax 가로줄이 잘리는 문제 해결하기: 모바일에서 보면 간혹 긴 수식이 잘리는 문제가 있습니다.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;190115&quot;&gt;&lt;a href=&quot;#190115&quot; class=&quot;headerlink&quot; title=&quot;190115&quot;&gt;&lt;/a&gt;190115&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hexo 기반의 블로그입니다. 현재 적용하고 있는 테마는 &lt;a href=&quot;http
      
    
    </summary>
    
      <category term="공지사항" scheme="https://3-24.github.io/categories/%EA%B3%B5%EC%A7%80%EC%82%AC%ED%95%AD/"/>
    
    
      <category term="블로그" scheme="https://3-24.github.io/tags/%EB%B8%94%EB%A1%9C%EA%B7%B8/"/>
    
      <category term="개발" scheme="https://3-24.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
  </entry>
  
  <entry>
    <title>크누스 최적화(Knuth Optimization)</title>
    <link href="https://3-24.github.io/2019/01/15/Knuth-Optimization-%ED%81%AC%EB%88%84%EC%8A%A4-%EC%B5%9C%EC%A0%81%ED%99%94/"/>
    <id>https://3-24.github.io/2019/01/15/Knuth-Optimization-크누스-최적화/</id>
    <published>2019-01-15T07:21:11.000Z</published>
    <updated>2019-01-17T09:17:16.988Z</updated>
    
    <content type="html"><![CDATA[<p>주어진 실수 $a_{i,j}(1 \le i \le j \le N)​$에 대해 다음과 같이 정의된 $d_{i,j}​$를 고려합니다.</p><script type="math/tex; mode=display">d_{i,j} = \begin{cases} a_{i.j} & \text{if } i=j \\ \min \left\{  k \in \{ i , i+1,  \cdots , j-1 \} : d_{i,k} + d_{k+1,j} + a_{i,j}\right\} & \text{if } i<j\end{cases}</script><p>이는 다음과 같은 $O(N^3)$짜리 동적계획법으로 해결할 수 있습니다.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">    D[i][i] = a[i][i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l=<span class="number">1</span>;i&lt;N;i++)&#123; <span class="comment">// l: length of interval</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N-l;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> j = i+l;</span><br><span class="line">        D[i][j] = INT_MAX;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">            D[i][j] = min(D[i][j], D[i][k] + D[k+<span class="number">1</span>][j] + a[i][j])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> D[<span class="number">1</span>][N];</span><br></pre></td></tr></table></figure></p><p>이것은 특정 조건을 만족하면 더 빠른 시간 안에 풀 수 있습니다. 위 코드에서 k의 검색 범위를 더 좁히는 방법이에요. 이를 위해서 $k_{i,j}​$를 다음과 같이 정의합니다:</p><script type="math/tex; mode=display">k_{i,j} = \begin{cases} i & \text{if } i=j \\ k \in \{i, i+1 , \cdots j-1\} \text{ such that } d_{i,j} = d_{i,k} + d_{k+1,j} + a_{i,j} & \text{if } i < j\end{cases}</script><p>이렇게 $d_{i,j}$를 결정할 때 사용된 $k$값(인덱스)을 계속 저장해나갈 때, $k_{i,j}$가 다음 조건을 만족하면 $\{ d_{i,j}\}$는 $O(N^2)$만에 계산 가능합니다.</p><script type="math/tex; mode=display">k_{i,j-1} \le k_{i,j} \le k_{i+1,j}</script><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">    D[i][i] = a[i][i];</span><br><span class="line">    K[i][i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l=<span class="number">1</span>;i&lt;N;i++)&#123; <span class="comment">// l: length of interval</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N-l;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> j = i+l;</span><br><span class="line">        D[i][j] = INT_MAX;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k=K[i][j<span class="number">-1</span>];k&lt;=min(K[i+<span class="number">1</span>][j],j);k++)&#123;</span><br><span class="line">            v = D[i][k] + D[k+<span class="number">1</span>][j] + a[i][j];</span><br><span class="line">            <span class="keyword">if</span> (v &lt; D[i][j])&#123;</span><br><span class="line">                D[i][j] = v;</span><br><span class="line">                K[i][j] = k;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> D[<span class="number">1</span>][N];</span><br></pre></td></tr></table></figure><p>배열 K를 만들어서 $k_{i,j}$를 저장했고, 세 번째 루프에서 $k$의 검색 범위를 더 줄였습니다. 이 코드가 $O(N^2)$임은 각 $l$에 대해 반복되는 연산이 많아야</p><script type="math/tex; mode=display">\begin{aligned} \sum _{i=1} ^{N-l} (k_{i+1,j} - k_{i,j-1} +1) &= \sum _{i=1} ^{N-l} (k_{i+1,i+l} - k_{i,i+l-1} +1) \\&= \sum _{i=2 } ^{N-l+1} k_{i,i+l-1} - \sum _{i=1 }^{N-l} k_{i,i+l-1} + N-l \\ &= k_{N-l+1,N} - k_{i,l} + N-l < 2N\end{aligned}</script><p>이기 때문이에요. 이런 방식의 동적 계획법 최적화를 Knuth 최적화라고 합니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;주어진 실수 $a_{i,j}(1 \le i \le j \le N)​$에 대해 다음과 같이 정의된 $d_{i,j}​$를 고려합니다.&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
d_{i,j} = \begin{case
      
    
    </summary>
    
      <category term="프로그래밍" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
      <category term="알고리즘" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    
      <category term="문제해결" scheme="https://3-24.github.io/tags/%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0/"/>
    
      <category term="알고리즘" scheme="https://3-24.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
      <category term="Knuth 최적화" scheme="https://3-24.github.io/tags/Knuth-%EC%B5%9C%EC%A0%81%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>equation-test</title>
    <link href="https://3-24.github.io/2019/01/14/equation-test/"/>
    <id>https://3-24.github.io/2019/01/14/equation-test/</id>
    <published>2019-01-14T05:00:00.000Z</published>
    <updated>2019-01-15T07:30:12.964Z</updated>
    
    <content type="html"><![CDATA[<p>수식을 테스트합니다.</p><script type="math/tex; mode=display">\begin{pmatrix} 1 & a_1 & a_1^2 & \cdots & a_1^n \\ 1 & a_2 & a_2^2 & \cdots & a_2^n \\ \vdots  & \vdots& \vdots & \ddots & \vdots \\ 1 & a_m & a_m^2 & \cdots & a_m^n     \end{pmatrix}</script><p>inline $a+b+c​$</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;수식을 테스트합니다.&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\begin{pmatrix}
 1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\
 1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://3-24.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round #532 (Div. 2) 후기</title>
    <link href="https://3-24.github.io/2019/01/14/CF-Round-532-DIv-2/"/>
    <id>https://3-24.github.io/2019/01/14/CF-Round-532-DIv-2/</id>
    <published>2019-01-14T04:08:49.000Z</published>
    <updated>2019-01-15T05:16:55.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Roman-and-Browser"><a href="#1-Roman-and-Browser" class="headerlink" title="1. Roman and Browser"></a>1. Roman and Browser</h2><p><a href="https://codeforces.com/contest/1100/problem/A" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1100/problem/A</a></p><p>b를 0부터 k-1까지 바꿔가면서 비교를 통해 최대 절대값을 찾아내면 됩니다. 직접 b+ik만 제외하면서 더하는 것이 쉽지 않기 때문에 전체 합을 구해놓고 b+ik의 원소를 빼는 형태로 구현했습니다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> Data[n]=&#123;<span class="number">0</span>,&#125;, initSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; Data[i];</span><br><span class="line">        initSum += Data[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> output = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> b=<span class="number">0</span>;b&lt;k;b++)&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = initSum, i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(b+i*k &lt;n)&#123;</span><br><span class="line">            sum -= Data[b+i*k];</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        sum = <span class="built_in">abs</span>(sum);</span><br><span class="line">        <span class="keyword">if</span> (output &lt; sum) output = sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; output;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-Build-a-Contest"><a href="#2-Build-a-Contest" class="headerlink" title="2. Build a Contest"></a>2. Build a Contest</h2><p><a href="https://codeforces.com/contest/1100/problem/B" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1100/problem/B</a></p><p>문제를 잘못 이해해서 풀지 못한 문제입니다. 제가 구현했던 것은 모든 난이도의 문제가 모인 순간 앞에 있는 모든 문제를 고려 대상에서 제외하는 것인데, 오늘 제출 체크를 해보니까 그러면 안된다는 것을 확인할 수 있었어요. 다음은 이를 반영하여 수정한 코드입니다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> checkDiff[<span class="number">100001</span>]=&#123;<span class="number">0</span>,&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// initialize checkDiff</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initDiff</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">        checkDiff[i] -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (checkDiff[i] != <span class="number">0</span>) count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n,m; <span class="comment">// number of difficulty levels, number of problems, &lt;= 100000</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> diff; <span class="comment">// new-designed difficulty</span></span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> r=<span class="number">1</span>;r&lt;=m;r++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; diff;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (checkDiff[diff] == <span class="number">0</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        checkDiff[diff]++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// if all difficulty is ready</span></span><br><span class="line">        <span class="keyword">if</span> (count == n)&#123;</span><br><span class="line">            count = initDiff(n);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// if not ready</span></span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>문제를 풀 때는 큰 수 배열 등에서 문제가 생길 것 같아 조심해서 짰는데, 너무 그 안에 갇혀있었다는 느낌이 들어요. 정작 문제는 다른 곳에서 나타났으니 말입니다.</p><h2 id="3-NN-and-Optical-Illusion"><a href="#3-NN-and-Optical-Illusion" class="headerlink" title="3. NN and Optical Illusion"></a>3. NN and Optical Illusion</h2><p>간단한 식 유도 문제입니다. 그림을 잘 그리면 빗변이 R+r, 높이가 R인 직각삼각형이 만들어지고 밑변과 빗변 사이의 각이 $ \pi / n $이 됩니다. 따라서</p><script type="math/tex; mode=display">\frac R {R+r} = \sin \frac {\pi} n</script><p>의 관계식을 R을 중심으로 풀어서 계산하면 됩니다. 저는 cout의 실수 자릿수출력이 6까지밖에 안되는 것을 이때 처음 알아서 헤맸습니다. </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.14159265</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; setprecision(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">int</span> n,r;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; r;</span><br><span class="line"></span><br><span class="line">    ld calc = <span class="built_in">sin</span>(PI/ld(n));</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (ld(r)*calc) / (<span class="number">1</span>-calc);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>자릿수 출력은 10으로 넉넉하게~</p><p>식을 내고 나서 Python으로 해결하려고 했는데 어떻게 짜는지 기억이 안나서 결국 c++로 해결했습니다. Python도 분명 일부 PS문제에서 강점이 있을 것 같은데 아쉽네요 ㅠ</p><h2 id="마무리"><a href="#마무리" class="headerlink" title="마무리"></a>마무리</h2><p>2번에서 너무 오래 걸리고 감점도 받아서 레이팅 -26당했습니다. 분발해야겠네요!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-Roman-and-Browser&quot;&gt;&lt;a href=&quot;#1-Roman-and-Browser&quot; class=&quot;headerlink&quot; title=&quot;1. Roman and Browser&quot;&gt;&lt;/a&gt;1. Roman and Browser&lt;/h2&gt;&lt;p&gt;
      
    
    </summary>
    
      <category term="프로그래밍" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
      <category term="Codeforces" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/Codeforces/"/>
    
    
      <category term="Codeforces" scheme="https://3-24.github.io/tags/Codeforces/"/>
    
      <category term="문제해결" scheme="https://3-24.github.io/tags/%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round #531 (Div. 3) 후기</title>
    <link href="https://3-24.github.io/2019/01/11/Codeforces%20Round%20#531%20(Div.%203)%20%ED%9B%84%EA%B8%B0/"/>
    <id>https://3-24.github.io/2019/01/11/Codeforces Round #531 (Div. 3) 후기/</id>
    <published>2019-01-11T03:43:36.000Z</published>
    <updated>2019-01-15T06:00:30.128Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Integer-Sequence-Dividing"><a href="#1-Integer-Sequence-Dividing" class="headerlink" title="1. Integer Sequence Dividing"></a>1. Integer Sequence Dividing</h2><p><a href="https://codeforces.com/contest/1102/problem/A" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1102/problem/A</a></p><p>처음에 임의의 원소를 받아서 차가 최소가 되도록 나눈다는 줄 알고 이상한 방향으로 고민했었습니다. 만약 그런 문제였다면 어떻게 풀어야 할 지 아직도 모르겠네요.</p><p>문제에서는 연속된 n개의 수에 대해서만 풀면 됩니다. 연속된 4개의 수가 x, x+1, x+2, x+3 이렇게 주어졌다면 A에다가 x와 x+3을 넣고 B에다가 x+1과 x+2를 넣으면 없는 걸로 생각할 수 있습니다. 그런 식으로 큰 쪽부터 네 개씩 덜어내면서 문제를 1,2,3 최대 세 개의 연속한 원소가 있는 형태로 바꿀 수 있어요. 이 형태의 출력은 그냥 <code>resultArr</code>라는 배열로 저장했습니다.</p><p>이게 최적인 이유는 </p><script type="math/tex; mode=display">\sum _{i=1 } ^n i = \frac { n(n+1)} 2</script><p>이기 때문이에요. n을 4로 나눈 나머지에 따라 저 값의 홀짝 여부를 판단해보면 다음과 같습니다.</p><div class="table-container"><table><thead><tr><th style="text-align:center">n (mod 4)</th><th style="text-align:center">1+2+…+n</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">짝수</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">홀수</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">홀수</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">짝수</td></tr></tbody></table></div><p>따라서 가장 잘 나눠봤자 [0,1,1,0]인데, 그 방법을 확인했으니까 맞겠죠! 통과된 코드는 다음과 같습니다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n, resultArr[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resultArr[n%<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-Array-K-Coloring"><a href="#2-Array-K-Coloring" class="headerlink" title="2. Array K-Coloring"></a>2. Array K-Coloring</h2><p><a href="https://codeforces.com/contest/1102/problem/B" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1102/problem/B</a></p><p>구현 문제입니다. 지문을 독해하는 데에 시간이 많이 들었어요.</p><p>일단 처음에는 색깔을 ‘최소로’ 사용하면서 칠했습니다. 원소가 ‘1 1 1 1’이렇게 있으면 색깔 1,2,3,4를 부여하는 식으로요.</p><p>그리고 나중에 색깔이 부족하면 ‘1 2 3 4’의 앞 부분부터 사용되지 않은 색깔로 바꿔넣었습니다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n, k; <span class="comment">// length of array, number of colors</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> A[n]; <span class="comment">// array-element input</span></span><br><span class="line">    <span class="comment">// count the number of each element, output array, count the number of color used, max(elementSize)</span></span><br><span class="line">    <span class="keyword">int</span> elementSize[<span class="number">5001</span>] = &#123;<span class="number">0</span>,&#125;, resultColoring[n], colorCount[k+<span class="number">1</span>] = &#123;<span class="number">0</span>,&#125;, maxElementSize = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; colorMap[k+<span class="number">1</span>]; <span class="comment">// color-array location</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="comment">// get input</span></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; A[i]; <span class="comment">// &lt;= 5000</span></span><br><span class="line"></span><br><span class="line">        elementSize[A[i]] += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// element is used more than number of color</span></span><br><span class="line">        <span class="keyword">if</span> (elementSize[A[i]] &gt; k) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// maxElementSize update</span></span><br><span class="line">        <span class="keyword">if</span> (maxElementSize &lt; elementSize[A[i]]) maxElementSize = elementSize[A[i]];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// color i th element of array</span></span><br><span class="line">        <span class="keyword">int</span> color = elementSize[A[i]];</span><br><span class="line">        resultColoring[i] = color;</span><br><span class="line">        colorCount[color] += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// update color-array location map</span></span><br><span class="line">        colorMap[color].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// what if less than k color is used?</span></span><br><span class="line">    <span class="keyword">if</span> (maxElementSize &lt; k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> c = <span class="number">1</span>; c &lt;= k; c++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (colorCount[c] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                maxElementSize += <span class="number">1</span>;</span><br><span class="line">                colorCount[c]--;</span><br><span class="line">                <span class="keyword">int</span> location = colorMap[c].back();</span><br><span class="line">                colorMap[c].pop_back();</span><br><span class="line">                resultColoring[location] = maxElementSize;</span><br><span class="line">                <span class="keyword">if</span> (maxElementSize == k)&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                        <span class="built_in">cout</span> &lt;&lt; resultColoring[i];</span><br><span class="line">                        <span class="keyword">if</span> (i != n<span class="number">-1</span>)&#123;</span><br><span class="line">                            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; resultColoring[i];</span><br><span class="line">            <span class="keyword">if</span> (i != n<span class="number">-1</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>뒤에 코드가 반복되는 것은 이중반복문 탈출할 때 flag로 처리하기 번거로워서 그랬습니다. 시간이 더 남았다면 함수로 바꿔넣거나 이중반복문 처리를 정상적으로 해서 코드 직관력을 높였을거에요..!</p><h2 id="3-Doors-Breaking-and-Repairing"><a href="#3-Doors-Breaking-and-Repairing" class="headerlink" title="3. Doors Breaking and Repairing"></a>3. Doors Breaking and Repairing</h2><p><a href="https://codeforces.com/contest/1102/problem/C" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1102/problem/C</a></p><p>경우로 나누어서 생각해보면 됩니다. 만약에 부수는 속도가 고치는 속도보다 빠르면 결국에는 다 부서질 것이고, 아니라면 부수는 사람이 한 번에 부술 수 있는 문만 부술 수 있습니다. 한 번에 부수지 못하면 수리하는 쪽이 부수지 않는 문에 붙어서 막으면 부수는 사람은 그 문을 절대 못부수기 때문이에요.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n,x,y;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="keyword">int</span> durability, count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; durability;</span><br><span class="line">        <span class="keyword">if</span> (x &gt;= durability) count++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (x&gt;y ? n : (count+<span class="number">1</span>)/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Balanced-Ternary-String"><a href="#4-Balanced-Ternary-String" class="headerlink" title="4. Balanced Ternary String"></a>4. Balanced Ternary String</h2><p><a href="https://codeforces.com/contest/1102/problem/D" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1102/problem/D</a></p><p>시간이 부족해서 이 문제는 풀지는 못했고, 대회 끝나고 10분정도 걸려서 practice submit에서 통과시켰습니다. 케이스를 잘 나눠서 구현하면 어려울 것 없는 문제라고 생각해요.</p><p>쉽게 관찰할 수 있는 사실은 0이 앞에, 2가 뒤에 갈수록 유리하다는 거에요! 만약에 주어진 input에서 0이 부족하다면 앞에서부터 훑어가면서 0이 아닌 수를 0으로 바꿔넣고, 2가 부족하다면 뒤에서부터 훑어가면서 2가 아닌 수를 2로 바꿔넣었습니다.</p><p>이후에는 1이 부족한 경우만 남습니다. 1이 부족하다는 것은 어디선가 0이나 2가 많이 쓰였다는 것이므로, 2가 넘칠 때 앞에서부터 2인 것은 1로 바꿔주고, 0이 넘칠 때 뒤에서부터 0인 것을 1로 바꿔주었습니다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n; <span class="comment">// length of s, &lt;= 3*10^5</span></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="keyword">int</span> countChar[<span class="number">3</span>] = &#123;-n/<span class="number">3</span>,-n/<span class="number">3</span>,-n/<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        countChar[<span class="keyword">int</span>(s[i]) - <span class="keyword">int</span>(<span class="string">'0'</span>)] += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (countChar[<span class="number">0</span>] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = <span class="keyword">int</span>(s[i])-<span class="keyword">int</span>(<span class="string">'0'</span>);</span><br><span class="line">            <span class="keyword">if</span> (num != <span class="number">0</span> &amp;&amp; countChar[num] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                countChar[num]--;</span><br><span class="line">                countChar[<span class="number">0</span>]++;</span><br><span class="line">                s[i] = <span class="string">'0'</span>;</span><br><span class="line">                <span class="keyword">if</span> (countChar[<span class="number">0</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (countChar[<span class="number">2</span>] &lt; <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = <span class="keyword">int</span>(s[i])-<span class="keyword">int</span>(<span class="string">'0'</span>);</span><br><span class="line">            <span class="keyword">if</span> (num != <span class="number">2</span> &amp;&amp; countChar[num] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                countChar[num]--;</span><br><span class="line">                countChar[<span class="number">2</span>]++;</span><br><span class="line">                s[i] = <span class="string">'2'</span>;</span><br><span class="line">                <span class="keyword">if</span> (countChar[<span class="number">2</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (countChar[<span class="number">1</span>] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ( countChar[<span class="number">2</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (s[i] == <span class="string">'2'</span>)&#123;</span><br><span class="line">                    s[i] = <span class="string">'1'</span>;</span><br><span class="line">                    countChar[<span class="number">2</span>]--;</span><br><span class="line">                    countChar[<span class="number">1</span>]++;</span><br><span class="line">                    <span class="keyword">if</span> (countChar[<span class="number">2</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span> (countChar[<span class="number">1</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">'0'</span>) &#123;</span><br><span class="line">                s[i] = <span class="string">'1'</span>;</span><br><span class="line">                countChar[<span class="number">0</span>]--;</span><br><span class="line">                countChar[<span class="number">1</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (countChar[<span class="number">1</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며"></a>마치며</h2><p>문제 독해력과 c++ 코드 구현력이 많이 부족함을 느꼈습니다. 둘 다 많이 풀다보면 나아질 부분으로 보입니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-Integer-Sequence-Dividing&quot;&gt;&lt;a href=&quot;#1-Integer-Sequence-Dividing&quot; class=&quot;headerlink&quot; title=&quot;1. Integer Sequence Dividing&quot;&gt;&lt;/a&gt;1. I
      
    
    </summary>
    
      <category term="프로그래밍" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
      <category term="Codeforces" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/Codeforces/"/>
    
    
      <category term="Codeforces" scheme="https://3-24.github.io/tags/Codeforces/"/>
    
      <category term="문제해결" scheme="https://3-24.github.io/tags/%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round #531 (Div. 3) 후기</title>
    <link href="https://3-24.github.io/2019/01/11/CF-Round-531-DIv-3/"/>
    <id>https://3-24.github.io/2019/01/11/CF-Round-531-DIv-3/</id>
    <published>2019-01-11T03:43:36.000Z</published>
    <updated>2019-01-15T05:16:41.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Integer-Sequence-Dividing"><a href="#1-Integer-Sequence-Dividing" class="headerlink" title="1. Integer Sequence Dividing"></a>1. Integer Sequence Dividing</h2><p><a href="https://codeforces.com/contest/1102/problem/A" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1102/problem/A</a></p><p>처음에 임의의 원소를 받아서 차가 최소가 되도록 나눈다는 줄 알고 이상한 방향으로 고민했었습니다. 만약 그런 문제였다면 어떻게 풀어야 할 지 아직도 모르겠네요.</p><p>문제에서는 연속된 n개의 수에 대해서만 풀면 됩니다. 연속된 4개의 수가 x, x+1, x+2, x+3 이렇게 주어졌다면 A에다가 x와 x+3을 넣고 B에다가 x+1과 x+2를 넣으면 없는 걸로 생각할 수 있습니다. 그런 식으로 큰 쪽부터 네 개씩 덜어내면서 문제를 1,2,3 최대 세 개의 연속한 원소가 있는 형태로 바꿀 수 있어요. 이 형태의 출력은 그냥 <code>resultArr</code>라는 배열로 저장했습니다.</p><p>이게 최적인 이유는 </p><script type="math/tex; mode=display"> \sum _{i=1 } ^n i = \frac { n(n+1)} 2</script><p>이기 때문이에요. n을 4로 나눈 나머지에 따라 저 값의 홀짝 여부를 판단해보면 다음과 같습니다.</p><div class="table-container"><table><thead><tr><th style="text-align:center">n (mod 4)</th><th style="text-align:center">1+2+…+n</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">짝수</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">홀수</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">홀수</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">짝수</td></tr></tbody></table></div><p>따라서 가장 잘 나눠봤자 [0,1,1,0]인데, 그 방법을 확인했으니까 맞겠죠! 통과된 코드는 다음과 같습니다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n, resultArr[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resultArr[n%<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-Array-K-Coloring"><a href="#2-Array-K-Coloring" class="headerlink" title="2. Array K-Coloring"></a>2. Array K-Coloring</h2><p><a href="https://codeforces.com/contest/1102/problem/B" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1102/problem/B</a></p><p>구현 문제입니다. 지문을 독해하는 데에 시간이 많이 들었어요.</p><p>일단 처음에는 색깔을 ‘최소로’ 사용하면서 칠했습니다. 원소가 ‘1 1 1 1’이렇게 있으면 색깔 1,2,3,4를 부여하는 식으로요.</p><p>그리고 나중에 색깔이 부족하면 ‘1 2 3 4’의 앞 부분부터 사용되지 않은 색깔로 바꿔넣었습니다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n, k; <span class="comment">// length of array, number of colors</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> A[n]; <span class="comment">// array-element input</span></span><br><span class="line">    <span class="comment">// count the number of each element, output array, count the number of color used, max(elementSize)</span></span><br><span class="line">    <span class="keyword">int</span> elementSize[<span class="number">5001</span>] = &#123;<span class="number">0</span>,&#125;, resultColoring[n], colorCount[k+<span class="number">1</span>] = &#123;<span class="number">0</span>,&#125;, maxElementSize = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; colorMap[k+<span class="number">1</span>]; <span class="comment">// color-array location</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="comment">// get input</span></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; A[i]; <span class="comment">// &lt;= 5000</span></span><br><span class="line"></span><br><span class="line">        elementSize[A[i]] += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// element is used more than number of color</span></span><br><span class="line">        <span class="keyword">if</span> (elementSize[A[i]] &gt; k) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// maxElementSize update</span></span><br><span class="line">        <span class="keyword">if</span> (maxElementSize &lt; elementSize[A[i]]) maxElementSize = elementSize[A[i]];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// color i th element of array</span></span><br><span class="line">        <span class="keyword">int</span> color = elementSize[A[i]];</span><br><span class="line">        resultColoring[i] = color;</span><br><span class="line">        colorCount[color] += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// update color-array location map</span></span><br><span class="line">        colorMap[color].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// what if less than k color is used?</span></span><br><span class="line">    <span class="keyword">if</span> (maxElementSize &lt; k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> c = <span class="number">1</span>; c &lt;= k; c++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (colorCount[c] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                maxElementSize += <span class="number">1</span>;</span><br><span class="line">                colorCount[c]--;</span><br><span class="line">                <span class="keyword">int</span> location = colorMap[c].back();</span><br><span class="line">                colorMap[c].pop_back();</span><br><span class="line">                resultColoring[location] = maxElementSize;</span><br><span class="line">                <span class="keyword">if</span> (maxElementSize == k)&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                        <span class="built_in">cout</span> &lt;&lt; resultColoring[i];</span><br><span class="line">                        <span class="keyword">if</span> (i != n<span class="number">-1</span>)&#123;</span><br><span class="line">                            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; resultColoring[i];</span><br><span class="line">            <span class="keyword">if</span> (i != n<span class="number">-1</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>뒤에 코드가 반복되는 것은 이중반복문 탈출할 때 flag로 처리하기 번거로워서 그랬습니다. 시간이 더 남았다면 함수로 바꿔넣거나 이중반복문 처리를 정상적으로 해서 코드 직관력을 높였을거에요..!</p><h2 id="3-Doors-Breaking-and-Repairing"><a href="#3-Doors-Breaking-and-Repairing" class="headerlink" title="3. Doors Breaking and Repairing"></a>3. Doors Breaking and Repairing</h2><p><a href="https://codeforces.com/contest/1102/problem/C" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1102/problem/C</a></p><p>경우로 나누어서 생각해보면 됩니다. 만약에 부수는 속도가 고치는 속도보다 빠르면 결국에는 다 부서질 것이고, 아니라면 부수는 사람이 한 번에 부술 수 있는 문만 부술 수 있습니다. 한 번에 부수지 못하면 수리하는 쪽이 부수지 않는 문에 붙어서 막으면 부수는 사람은 그 문을 절대 못부수기 때문이에요.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n,x,y;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="keyword">int</span> durability, count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; durability;</span><br><span class="line">        <span class="keyword">if</span> (x &gt;= durability) count++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (x&gt;y ? n : (count+<span class="number">1</span>)/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Balanced-Ternary-String"><a href="#4-Balanced-Ternary-String" class="headerlink" title="4. Balanced Ternary String"></a>4. Balanced Ternary String</h2><p><a href="https://codeforces.com/contest/1102/problem/D" rel="external nofollow noopener noreferrer" target="_blank">https://codeforces.com/contest/1102/problem/D</a></p><p>시간이 부족해서 이 문제는 풀지는 못했고, 대회 끝나고 10분정도 걸려서 practice submit에서 통과시켰습니다. 케이스를 잘 나눠서 구현하면 어려울 것 없는 문제라고 생각해요.</p><p>쉽게 관찰할 수 있는 사실은 0이 앞에, 2가 뒤에 갈수록 유리하다는 거에요! 만약에 주어진 input에서 0이 부족하다면 앞에서부터 훑어가면서 0이 아닌 수를 0으로 바꿔넣고, 2가 부족하다면 뒤에서부터 훑어가면서 2가 아닌 수를 2로 바꿔넣었습니다.</p><p>이후에는 1이 부족한 경우만 남습니다. 1이 부족하다는 것은 어디선가 0이나 2가 많이 쓰였다는 것이므로, 2가 넘칠 때 앞에서부터 2인 것은 1로 바꿔주고, 0이 넘칠 때 뒤에서부터 0인 것을 1로 바꿔주었습니다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> n; <span class="comment">// length of s, &lt;= 3*10^5</span></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="keyword">int</span> countChar[<span class="number">3</span>] = &#123;-n/<span class="number">3</span>,-n/<span class="number">3</span>,-n/<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        countChar[<span class="keyword">int</span>(s[i]) - <span class="keyword">int</span>(<span class="string">'0'</span>)] += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (countChar[<span class="number">0</span>] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = <span class="keyword">int</span>(s[i])-<span class="keyword">int</span>(<span class="string">'0'</span>);</span><br><span class="line">            <span class="keyword">if</span> (num != <span class="number">0</span> &amp;&amp; countChar[num] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                countChar[num]--;</span><br><span class="line">                countChar[<span class="number">0</span>]++;</span><br><span class="line">                s[i] = <span class="string">'0'</span>;</span><br><span class="line">                <span class="keyword">if</span> (countChar[<span class="number">0</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (countChar[<span class="number">2</span>] &lt; <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = <span class="keyword">int</span>(s[i])-<span class="keyword">int</span>(<span class="string">'0'</span>);</span><br><span class="line">            <span class="keyword">if</span> (num != <span class="number">2</span> &amp;&amp; countChar[num] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                countChar[num]--;</span><br><span class="line">                countChar[<span class="number">2</span>]++;</span><br><span class="line">                s[i] = <span class="string">'2'</span>;</span><br><span class="line">                <span class="keyword">if</span> (countChar[<span class="number">2</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (countChar[<span class="number">1</span>] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ( countChar[<span class="number">2</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (s[i] == <span class="string">'2'</span>)&#123;</span><br><span class="line">                    s[i] = <span class="string">'1'</span>;</span><br><span class="line">                    countChar[<span class="number">2</span>]--;</span><br><span class="line">                    countChar[<span class="number">1</span>]++;</span><br><span class="line">                    <span class="keyword">if</span> (countChar[<span class="number">2</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span> (countChar[<span class="number">1</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">'0'</span>) &#123;</span><br><span class="line">                s[i] = <span class="string">'1'</span>;</span><br><span class="line">                countChar[<span class="number">0</span>]--;</span><br><span class="line">                countChar[<span class="number">1</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (countChar[<span class="number">1</span>] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며"></a>마치며</h2><p>문제 독해력과 c++ 코드 구현력이 많이 부족함을 느꼈습니다. 둘 다 많이 풀다보면 나아질 부분으로 보입니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-Integer-Sequence-Dividing&quot;&gt;&lt;a href=&quot;#1-Integer-Sequence-Dividing&quot; class=&quot;headerlink&quot; title=&quot;1. Integer Sequence Dividing&quot;&gt;&lt;/a&gt;1. I
      
    
    </summary>
    
      <category term="프로그래밍" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
      <category term="Codeforces" scheme="https://3-24.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/Codeforces/"/>
    
    
      <category term="Codeforces" scheme="https://3-24.github.io/tags/Codeforces/"/>
    
      <category term="문제해결" scheme="https://3-24.github.io/tags/%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0/"/>
    
  </entry>
  
  <entry>
    <title>카탈란 수-대각선을 넘지 않는 경우의 수</title>
    <link href="https://3-24.github.io/2018/11/20/%EC%B9%B4%ED%83%88%EB%9E%80-%EC%88%98/"/>
    <id>https://3-24.github.io/2018/11/20/카탈란-수/</id>
    <published>2018-11-20T09:49:55.000Z</published>
    <updated>2019-02-27T11:53:28.745Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>$n \times n​$ 격자에서 왼쪽 아래에서 오른쪽 위 모서리로 가는 오른쪽이나 위로 가는 이동만으로 이루어진 경로를 생각하자. 이 때 왼쪽 아래와 오른쪽 위 모서리를 연결한 대각선 위로 올라가지 않는 경로는 몇 개나 있을까?</p><img src="/2018/11/20/카탈란-수/catalan03.png" title="catalan03"><p>이 조건을 만족하는 경우의 수를 카탈란 수라고 하고, $C_n​$으로 적습니다.</p><h2 id="일반항"><a href="#일반항" class="headerlink" title="일반항"></a>일반항</h2><p>크게 두 단계에 걸쳐서 증명에 들어갑니다. 편의상 ‘오른쪽으로 이동’을 $\Rightarrow$, ‘위로 이동’을 $\Uparrow$로 앞으로 적겠습니다.</p><h3 id="대각선-조건이-없을-때"><a href="#대각선-조건이-없을-때" class="headerlink" title="대각선 조건이 없을 때"></a>대각선 조건이 없을 때</h3><p>(사실 유명한 문제입니다. 알면 건너뛰세요)</p><p>$n\times m$ 격자에서 왼쪽 아래에서 오른쪽 위 모서리로 가는 최단 경로의 개수는?</p><p>가로 길이가 $n$, 세로 길이가 $m$이기 때문에 왼쪽 아래 모서리에서 순서에 상관 없이 $\Rightarrow$을 $n$번, $\Uparrow$을 $m$번 했을 때 오른쪽 위 모서리에 도달하게 됩니다. 따라서 문제에서 묻는 최단 경로의 개수 $D_{n,m}$는 다음과 같습니다.</p><script type="math/tex; mode=display">D_{n,m} ={n+m \choose n} = \frac {(n+m)!}{n!m!}</script><h3 id="대각선-조건이-있을-때"><a href="#대각선-조건이-있을-때" class="headerlink" title="대각선 조건이 있을 때"></a>대각선 조건이 있을 때</h3><p>2.1의 문제로 이 문제를 바꿀 것입니다. 핵심 아이디어는 다음과 같습니다:</p><img src="/2018/11/20/카탈란-수/catalan04.png" title="catalan04"><p>대각선을 넘어가는 경로를 생각합니다. 이 때, 대각선을 최초로 넘어간 이후의 경로를 대칭시켜버리면, $n-1 \times n+1$의 격자에서 경로를 얻을 수 있습니다. 즉, <strong>문제의 조건을 위배하는 경로는 $n-1 \times n+1$ 격자의 경로에 대응</strong>됩니다.</p><p>그런데 그림의 $n-1 \times n+1$에 남아 있는 대각선을 살펴보면, <strong>모든 $n-1 \times n+1$경로가 대각선을 지나갈 수밖에 없습니다.</strong>  즉, 반대로 $n-1 \times n+1$ 경로를 문제를 만족하지 않는 $n \times n$ 경로에 대응할 수 있습니다.</p><p>따라서 문제의 조건을 위배하는 경로의 개수는 $D_{n-1,n+1}$입니다.</p><p>이제 남은 것은 $n \times n$에서 모든 경로에서 조건을 위배하는 경로를 제외한 것을 세주는 것입니다!</p><script type="math/tex; mode=display">C_n = D_{n,n} - D_{n-1,n+1} = \frac{(2n)!}{n!n!} \left(1 - \frac {n}{n+1} \right) = \frac 1{n+1} {2n \choose n}</script><p>이 스케치를 집합 용어를 써서 엄밀하게 적어주면 완전 증명이 됩니다.</p><h2 id="점화식"><a href="#점화식" class="headerlink" title="점화식"></a>점화식</h2><img src="/2018/11/20/카탈란-수/catalan05.png" title="catalan05"><p>처음으로 대각선과 만나는 좌표를 중심으로 생각을 전개하면 쉽습니다. 위 그림의 경우에는 $(3,3)$에서 만나는데, 그 이후로 $(3,3)$에서 $(8,8)$로 가는 대각선을 넘지 않는 경로를 세주면 되고, 그 경우의 수는 $C_5$입니다. (대각선을 만나지 않고 끝점에 도달했더라도, 그 끝점을 대각선과 만난 점으로 생각하면 됩니다)</p><p>이제 $(0,0)$에서 $(3,3)$으로 가는 대각선과 만나지 않는 경로들을 세야 하는데, 아래 그림을 보면 역시 이미 풀었던 문제라는 것을 알 수 있습니다. 처음에 $\Rightarrow$로, 마지막에도 $\Uparrow$로 행동이 강제되는데, 그러고 남은 문제는 $2 \times 2$의 문제, 즉 $C_2$입니다.</p><img src="/2018/11/20/카탈란-수/catalan06.png" title="catalan06"><p>이 셈을 $(1,1)$에서 $(8,8)$까지 모두 해서 더하면 점화식을 얻을 수 있습니다. 일반적으로 접근하면 다음과 같은 식을 쉽게 쓸 수 있습니다.</p><script type="math/tex; mode=display">C_n = \sum _{i=1} ^n C_{i-1} C_{n-i}</script><p>그리고 이 점화식의 시작인 $C_0 = 1​$도 같이 써주면 됩니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;$n \times n​$ 격자에서 왼쪽 아래에서 오른쪽 위 모서리로 가는 오른쪽이나 위로 가는 이동만으
      
    
    </summary>
    
      <category term="수학" scheme="https://3-24.github.io/categories/%EC%88%98%ED%95%99/"/>
    
      <category term="조합론" scheme="https://3-24.github.io/categories/%EC%88%98%ED%95%99/%EC%A1%B0%ED%95%A9%EB%A1%A0/"/>
    
    
      <category term="카탈란 수" scheme="https://3-24.github.io/tags/%EC%B9%B4%ED%83%88%EB%9E%80-%EC%88%98/"/>
    
  </entry>
  
  <entry>
    <title>번사이드 보조정리</title>
    <link href="https://3-24.github.io/2018/09/22/%EB%B2%88%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%B3%B4%EC%A1%B0%EC%A0%95%EB%A6%AC/"/>
    <id>https://3-24.github.io/2018/09/22/번사이드-보조정리/</id>
    <published>2018-09-22T09:50:27.000Z</published>
    <updated>2019-02-27T11:59:38.851Z</updated>
    
    <content type="html"><![CDATA[<p>이 번사이드 보조정리는 유한 대칭군 위에서 기술되어 있습니다.</p><h2 id="0-유한군-용어"><a href="#0-유한군-용어" class="headerlink" title="0. 유한군 용어"></a>0. 유한군 용어</h2><p>유한 집합 $X$에 대해</p><ul><li>$X$의 대칭군symmetric group =  $S_X = \{ \sigma \in X \times X : \sigma \text{ is bijective function}\}$</li><li>$X$의 순열군permutation group은 대칭군의 부분군</li></ul><p>이다.</p><h2 id="1-정의"><a href="#1-정의" class="headerlink" title="1. 정의"></a>1. 정의</h2><p>$(G,\circ,id)$를 유한 집합 $X$의 순열군으로 놓자. 그러면 다음이 성립한다:</p><script type="math/tex; mode=display">|X/G| = \frac {1}{|G|} \sum _{\sigma \in G} | X_\sigma |</script><p>여기서 사용되었고 또 앞으로 사용할 집합들의 의미는 다음과 같습니다:</p><ul><li>$G(x) = \{ \sigma (x) : \sigma \in G\} $ for each $x \in X$</li><li>$ X/G = \{ G(x) : x \in X \}$</li><li>$ X_\sigma = \{ x \in X: \sigma (x) =x \} $ for each $ \sigma \in G $</li><li>$ G_x = \{\sigma \in G : \sigma(x) = x \}$ for each $x \in X $</li></ul><h3 id="1-1-예시"><a href="#1-1-예시" class="headerlink" title="1.1. 예시"></a>1.1. 예시</h3><p>입체 도형을 색칠하는 경우의 수를 구할 때 사용됩니다. $X$를 주어진 색깔로 각 면을 칠하는 방법으로 놓고, $G$에서 회전을 고려해주면 됩니다.</p><p><strong>문제. 정육면체를 4가지 색으로 칠하는 방법의 가짓수는 얼마인가? 단, 돌렸을 때 같아지는 것은 하나로 센다.</strong></p><p>‘색칠’과 ‘돌리기’를 동시에 고려해서 개수를 세는 것은 힘들기 때문에 이 대상을 군으로 바라보면서 그 둘을 분리할 수 있도록 번사이드 보조정리를 사용합니다.</p><ul><li>$X=\{1,2,3,4\}^6$, $x \in X $는 (윗면, 앞면, 오른면, 뒷면, 왼면, 아랫면) 순서로 색칠된다.</li><li>$G \subset X \times X$, 정육면체를 회전하는 방법</li></ul><p>이 때, $G$가 $X$의 순열군이라는 것은 어렵지 않게 보일 수 있습니다.</p><ul><li>$G \subseteq S_X$</li><li>$(G, \circ$)는 군이다.<ul><li>$\forall \sigma_1 , \sigma_2 \in G, \sigma_1 \circ \sigma_2 \in G $ (닫혀있음)</li><li>항등함수($id$)가 $G$에 포함된다.</li><li>$ \forall \sigma_1 , \sigma_2 , \sigma_3 \in G, (\sigma_1 \circ \sigma_2) \circ \sigma_3 = \sigma_1 \circ (\sigma_2 \circ \sigma_3) $ (결합법칙)</li><li>$\forall \sigma \in G, \exists \sigma^{-1} \in G \; \sigma \circ \sigma ^{-1} = \sigma^{-1} \circ \sigma = id $ (역원)</li></ul></li></ul><p>이제 번사이드 보조정리를 사용하기 위해서는 회전 함수로 이루어진 $G$를 직접 세워야 하는데, 의외로 까다로운 부분이에요. 일단 6개의 면이 있고 각 면에 대해 옆면을 회전하는 방법이 4가지이므로, $|G| = 24$입니다.</p><p>이제 각 $ \sigma \in G$에 대해 $X_\sigma$를 구하기 앞서 $G$의 모든 원소들을 찾아야 하는데, <strong>헷갈리면 큐브 하나를 옆에 들고 돌려가면서 세는 것이 좋습니다.</strong></p><ul><li>돌리지 않음 ( $\{id\}$)</li><li>면에 대해 90도 회전하는 방법 6가지 ($G_1$)</li><li>면에 대해 180도 회전하는 방법 3가지 ($G_2$)</li><li>꼭짓점에 대해 120도 회전하는 방법 8가지 ($G_3$)</li><li>모서리에 대해 180도 회전하는 방법 6가지 ($G_4$)</li></ul><p>‘면에 대해 회전한다’는 것은 면의 중심을 관통하는 회전축을 기준으로 고정된 방향(시계방향, 반시계방향 중 하나 선택)으로 돌린다는 것을 뜻합니다.</p><p>‘꼭짓점에 대해 회전한다’는 정육면체에서 양 끝에 있는 꼭짓점을 관통하는 회전축을 기준으로 돌리는 것을 의미합니다.</p><p>‘모서리에 대해 회전한다’는 모서리의 절반과 반대쪽 모서리의 절반을 관통하는 회전축을 기준으로 합니다.</p><p>이 방법들이 서로 다르고 개수를 모두 더했을 때 24가 되므로 회전하는 방법을 이렇게 나눌 수 있다는 것을 확인할 수 있습니다. 즉, $\{G_1, G_2 ,G_3, G_4, \{id\} \} $ 는 $G$의 분할partition입니다.</p><p>이제 번사이드 보조정리를 사용하면</p><ul><li>$ |G| = 24$</li><li>$|X_{id}| = |X| = 4^6  $</li><li>$\forall \sigma \in G_{1} , \;|X_\sigma| = 4^3$ (윗면에 대해 회전했다면 윗면, 옆면, 아랫면 색깔에 의해 결정된다)</li><li>$\forall \sigma \in G_2,\; |X_\sigma| = 4^4 $ (윗면에 대해 회전했다면 윗면, 아랫면, 옆면1, 옆면2 색깔에 의해 결정된다)</li><li>$\forall \sigma \in G_3, \; |X_\sigma| = 4^2 $ (대상 꼭짓점에 인접한 면과 그렇지 않은 면의 색깔에 의해 결정된다)</li><li>$ \forall \sigma \in G_4, \;|X_\sigma| = 4^3 $ (대상 모서리에 인접한 면과 그 반대쪽에 있는 면, 그리고 옆면의 색깔에 의해 결정된다)</li></ul><script type="math/tex; mode=display">|X/G| = \frac 1 {|G|} \sum _{ \sigma \in G} |X_\sigma| = \frac 1 {24} (4^6 + 6 \times 4^3 + 3 \times 4^4 + 8 \times 4^2 + 6 \times 4^3 )</script><p>마지막으로 얻는 식에서 알 수 있는 점은 칠할 수 있는  색깔의 가짓수는 사실 식의 형태에 큰 영향을 주지 않는다는 거에요! 만약 정육면체를 $n$개의 색으로 칠하는 방법의 수를 구한다면 다음과 같습니다:</p><script type="math/tex; mode=display">\frac 1 {24} ( n^6 + 3n^4 + 12n^3 + 8n^2 )</script><p>​    </p><h2 id="2-증명"><a href="#2-증명" class="headerlink" title="2. 증명"></a>2. 증명</h2><h3 id="2-1-유한군에서의-궤도-안정자군-정리"><a href="#2-1-유한군에서의-궤도-안정자군-정리" class="headerlink" title="2.1. 유한군에서의 궤도-안정자군 정리"></a>2.1. 유한군에서의 궤도-안정자군 정리</h3><h4 id="2-1-1-정의"><a href="#2-1-1-정의" class="headerlink" title="2.1.1. 정의"></a>2.1.1. 정의</h4><script type="math/tex; mode=display">|G_x| |G(x)| = |G|</script><p>이 부분이 가장 힘든 직관인 것 같습니다. </p><h4 id="2-1-2-증명"><a href="#2-1-2-증명" class="headerlink" title="2.1.2. 증명"></a>2.1.2. 증명</h4><p>$G_x$를 확장해서 다루기 위해 $H_{x,y}$를 다음과 같이 정의하자:</p><script type="math/tex; mode=display">H_{x,y} = \{ \sigma \in G : \sigma(x) = y \}</script><p><strong>1. $y \in G(x)$일 때, $|H_{x,y}| = |G_x|$이다.</strong></p><p>$ f: G_x \to H_{x,y} $를 다음과 같이 정의한다:</p><script type="math/tex; mode=display">f(\sigma) = h \circ \sigma  \quad \text{where } h(x) = y</script><p>$f \in G_x \times H_{x,y}$이고, 모든 $\sigma \in G_x$가 $H_{x,y}$로 대응되므로 $f$는 함수이다.</p><p>$h$는 일대일대응bijective이다.</p><p>$h^{-1} \in G$이고, 따라서 $f^{-1}(\sigma) = h^{-1} \circ \sigma $로 정의했을 때 $f^{-1}$은 $f$의 역함수이다.</p><p>따라서 $f$는 일대일대응bijective이다. 즉, $|H_{x,y} | = |G_x|$이다.</p><p><strong>2. 임의의 $x \in X$에 대해 $\{H_{x,y}:y \in G(x)\}$는 $G$의 분할이다</strong></p><p>분할의 정의를 하나씩 확인해보면 됩니다. 겹치는 일이 없고, 모두 합쳤을 때 $G$가 됩니다.</p><h3 id="2-2-나머지-과정"><a href="#2-2-나머지-과정" class="headerlink" title="2.2. 나머지 과정"></a>2.2. 나머지 과정</h3><p>다음과 같은 관계relation을 고려합니다:</p><script type="math/tex; mode=display">R = \{(x , \sigma )\in X \times G : \sigma(x) = x\}</script><p>이런 관계를 정의하면 좋은 이유는 두 번 세면서 등식을 얻어내기 좋기 때문이에요.</p><script type="math/tex; mode=display">|R| = \sum _{x \in X} | G_x | = \sum _{ \sigma \in G } |X_\sigma |</script><p>이대로 위에서 증명한 보조정리를 써가면서 전개하면 원하던 결과를 얻을 수 있습니다.</p><script type="math/tex; mode=display">\begin{aligned} \frac 1 {|G|} \sum _{\sigma \in G} |X_\sigma| &= \sum _{x \in X} \frac {|G_x|}{|G|} \\ &= \sum _{x\in X} \frac {1}{|G(x)|} = \sum _{A \in X/G} \sum _{x \in A} \frac {1}{|A|} = |X/G| \end{aligned}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이 번사이드 보조정리는 유한 대칭군 위에서 기술되어 있습니다.&lt;/p&gt;
&lt;h2 id=&quot;0-유한군-용어&quot;&gt;&lt;a href=&quot;#0-유한군-용어&quot; class=&quot;headerlink&quot; title=&quot;0. 유한군 용어&quot;&gt;&lt;/a&gt;0. 유한군 용어&lt;/h2&gt;&lt;p&gt;유한
      
    
    </summary>
    
      <category term="수학" scheme="https://3-24.github.io/categories/%EC%88%98%ED%95%99/"/>
    
      <category term="조합론" scheme="https://3-24.github.io/categories/%EC%88%98%ED%95%99/%EC%A1%B0%ED%95%A9%EB%A1%A0/"/>
    
    
      <category term="군" scheme="https://3-24.github.io/tags/%EA%B5%B0/"/>
    
      <category term="조합론" scheme="https://3-24.github.io/tags/%EC%A1%B0%ED%95%A9%EB%A1%A0/"/>
    
      <category term="번사이드 보조정리" scheme="https://3-24.github.io/tags/%EB%B2%88%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%B3%B4%EC%A1%B0%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>이분그래프</title>
    <link href="https://3-24.github.io/2018/09/13/%EC%9D%B4%EB%B6%84%EA%B7%B8%EB%9E%98%ED%94%84/"/>
    <id>https://3-24.github.io/2018/09/13/이분그래프/</id>
    <published>2018-09-13T09:50:08.000Z</published>
    <updated>2019-02-27T12:09:28.713Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-정의"><a href="#1-정의" class="headerlink" title="1. 정의"></a>1. 정의</h2><p>그래프 $G = (V,E)$에 대해 다음 조건을 만족하면 이분그래프bipartite graph 라고 합니다.</p><p>공집합이 아닌 $V$의 분할partition $\{V_1 ,V_2\}$가 있어서</p><script type="math/tex; mode=display"> E \subseteq \{ \{v_1, v_2\} : v_1 \in V_1, v_2 \in V_2 \}\</script><p>이와 같은 이분그래프에 대해 추가적인 표기법으로 $G = (V_1, V_2, E)$를 사용하기도 합니다. Figure 1과 같은 형태입니다.</p><div align="center"><img src="https://i.stack.imgur.com/KZ9eG.png"><p></p>Figure 1. 이분그래프의 예<p></p></div><h2 id="2-판별"><a href="#2-판별" class="headerlink" title="2. 판별"></a>2. 판별</h2><p>따라서 어떤 그래프가 이분그래프인지 아닌지 판별할 때는 Figure 2와 같이 두 가지 색깔을 칠하면서 접근하면 좋습니다. 어떤 변을 잡아도 그 변을 구성하는 꼭짓점은 다른 색깔로 칠해져야 하기 때문입니다.</p><div align="center"><img src="http://mathworld.wolfram.com/images/eps-gif/BipartiteGraph_1000.gif"><p></p>Figure 2. 이분그래프의 판별<p></p></div><h3 id="2-1-알고리즘"><a href="#2-1-알고리즘" class="headerlink" title="2.1. 알고리즘"></a>2.1. 알고리즘</h3><p><strong>프로그래밍</strong>으로 이분그래프를 확인할 때는 BFS 방식을 사용하면 됩니다. 2에서 이분그래프를 판별하는 과정을 그대로 적용합니다. 입력 형태는 (<a href="https://www.acmicpc.net/problem/1707" rel="external nofollow noopener noreferrer" target="_blank">#</a>)와 같고, Python 3.7에서 쓰여진 코드는 다음과 같습니다:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">test_nbr = int(input()) <span class="comment"># number of test cases</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isBipartite</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># v and e is number of vertexes and edges, respectively.</span></span><br><span class="line">    v,e = map(int,input().split())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># None if not colored</span></span><br><span class="line">    <span class="comment"># If colored, there are two bool cases: False and True.</span></span><br><span class="line">    colorArr = [<span class="keyword">None</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(v+<span class="number">1</span>)]</span><br><span class="line">    adjacentPoints = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(v+<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(e):</span><br><span class="line">        v1, v2 = map(int, input().split()) <span class="comment"># edge (v1, v2) is expected input</span></span><br><span class="line">        adjacentPoints[v1].append(v2)</span><br><span class="line">        adjacentPoints[v2].append(v1)</span><br><span class="line"></span><br><span class="line">    queue = []</span><br><span class="line">    node = set([i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,v+<span class="number">1</span>)]) <span class="comment"># for non-connected graph</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> bool(node): <span class="comment"># node is nonempty</span></span><br><span class="line">        c = node.pop()</span><br><span class="line">        queue.append(c)</span><br><span class="line">        <span class="keyword">while</span> bool(queue): <span class="comment"># queue is nonempty</span></span><br><span class="line">            start = queue[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">for</span> u <span class="keyword">in</span> adjacentPoints[start]:</span><br><span class="line">                <span class="keyword">if</span> colorArr[u] <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                    <span class="keyword">if</span> colorArr[u] <span class="keyword">is</span> colorArr[start]:</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    colorArr[u] = <span class="keyword">not</span> colorArr[start]</span><br><span class="line">                    queue.append(u)</span><br><span class="line">            <span class="keyword">del</span> queue[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> start != c: node.remove(start)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(test_nbr):</span><br><span class="line">    print(<span class="string">'YES'</span> <span class="keyword">if</span> isBipartite() <span class="keyword">else</span> <span class="string">'NO'</span>)</span><br></pre></td></tr></table></figure><h2 id="3-정리"><a href="#3-정리" class="headerlink" title="3. 정리"></a>3. 정리</h2><p><strong>이분그래프는 홀수 길이의 순환cycle이 존재하지 않고, 그 역도 성립한다.</strong></p><h3 id="3-1-정방향-증명"><a href="#3-1-정방향-증명" class="headerlink" title="3.1. 정방향 증명"></a>3.1. 정방향 증명</h3><p><strong>이분그래프는 홀수 길이의 순환이 존재하지 않는다.</strong></p><p>이분그래프 $G = (U,V,E)$에 대해 $E \subseteq U \times V$이므로 모든 순환의 형태는 $U$와 $V$가 교대해서 나타난다. 따라서 그 순환의 길이는 짝수이다.</p><h3 id="3-2-역방향-증명"><a href="#3-2-역방향-증명" class="headerlink" title="3.2. 역방향 증명"></a>3.2. 역방향 증명</h3><p><strong>홀수 길이의 순환이 존재하지 않는 그래프는 이분그래프이다.</strong></p><blockquote><p>직접 색칠하면서 이분그래프를 판별할 때의 과정이 증명에 담겨있습니다. 처음에 점 하나를 잡아서 색칠해놓고, 인접한 것들을 계속 반대 색깔로 칠해 나가면서 모순이 생기는 지를 확인해야 합니다. 이를 쉽게 서술하기 위해 ‘최소 경로’라는 개념을 도입했습니다.</p></blockquote><p>$G = (V,E)$에 대해 임의의 $v\in V$를 잡자. 그리고 직접 이분그래프를 설계하기 위해 다음과 같은 $A,B \subset V$를 정의한다.</p><script type="math/tex; mode=display">A = \{ a \in V : \text{the shortest path from } a \text{ to } v \text{ has odd length }\}\\B = \{ b \in V: \text{the shortest path from } b \text { to } v \text{ has even length }\}</script><p>먼저, $A \sqcup B = V$이다. ( $A,B$는 서로소disjoint이고, $A \cup B=V$라는 뜻)</p><p>이제 $E \subseteq \{ \{a,b\} : a \in A \wedge b \in B \} $임을 보일 것이다.</p><p>서로 다른 $a_1, a_2 \in A$에 대해 $a_1 $과 $v$ 사이의 최소 경로 길이를 $l(a_1)$, $a_2$와 $v$ 사이의 최소 경로 길이를 $l(a_2)​$라고 놓으면 다음이 성립한다:</p><script type="math/tex; mode=display">2 | l(a_1) + l(a_2)</script><p>만약에 $ \{a_1, a_2 \} \in E $라면 $a_1, a_2, v$를 잇는 순환의 길이가 홀수이므로 모순이다.</p><p>$B$도 이것이 똑같이 성립한다.</p><p>따라서 $A$끼리 연결된 선이 없고, $B$끼리도 연결된 선이 없으므로 $G$는 이분그래프이다.</p><h2 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h2><p>[1] <a href="https://tex.stackexchange.com/questions/15088/bipartite-graphs" rel="external nofollow noopener noreferrer" target="_blank">https://tex.stackexchange.com/questions/15088/bipartite-graphs</a></p><p>[2] <a href="http://mathworld.wolfram.com/BipartiteGraph.html" rel="external nofollow noopener noreferrer" target="_blank">http://mathworld.wolfram.com/BipartiteGraph.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-정의&quot;&gt;&lt;a href=&quot;#1-정의&quot; class=&quot;headerlink&quot; title=&quot;1. 정의&quot;&gt;&lt;/a&gt;1. 정의&lt;/h2&gt;&lt;p&gt;그래프 $G = (V,E)$에 대해 다음 조건을 만족하면 이분그래프bipartite graph 라고 합니다.
      
    
    </summary>
    
      <category term="수학" scheme="https://3-24.github.io/categories/%EC%88%98%ED%95%99/"/>
    
      <category term="그래프 이론" scheme="https://3-24.github.io/categories/%EC%88%98%ED%95%99/%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0/"/>
    
    
      <category term="이분그래프" scheme="https://3-24.github.io/tags/%EC%9D%B4%EB%B6%84%EA%B7%B8%EB%9E%98%ED%94%84/"/>
    
      <category term="BFS" scheme="https://3-24.github.io/tags/BFS/"/>
    
  </entry>
  
</feed>
